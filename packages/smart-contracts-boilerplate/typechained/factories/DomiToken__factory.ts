/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DomiToken, DomiTokenInterface } from "../DomiToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distribute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isSufficient",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastDistributed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stabilityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060408051808201825260098152682237b6b4aa37b5b2b760b91b602080830191825283518085019094526004845263446f6d6960e01b9084015281519192916200005f91600391620001fe565b50805162000075906004906020840190620001fe565b5050600580546001600160a01b0319163317908190556040516001600160a01b039190911691506000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3620000f633620000d362000112565b620000e39060ff16600a6200034c565b620000f090606462000441565b62000117565b600680546001600160a01b0319163317905542600955620004b6565b601290565b6001600160a01b038216620001495760405162461bcd60e51b81526004016200014090620002a4565b60405180910390fd5b6200015760008383620001f9565b80600260008282546200016b9190620002e4565b90915550506001600160a01b038216600090815260208190526040812080548392906200019a908490620002e4565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90620001df908590620002db565b60405180910390a3620001f560008383620001f9565b5050565b505050565b8280546200020c9062000463565b90600052602060002090601f0160209004810192826200023057600085556200027b565b82601f106200024b57805160ff19168380011785556200027b565b828001600101855582156200027b579182015b828111156200027b5782518255916020019190600101906200025e565b50620002899291506200028d565b5090565b5b808211156200028957600081556001016200028e565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60008219821115620002fa57620002fa620004a0565b500190565b80825b600180861162000313575062000343565b818704821115620003285762000328620004a0565b808616156200033657918102915b9490941c93800262000302565b94509492505050565b60006200035d600019848462000364565b9392505050565b60008262000375575060016200035d565b8162000384575060006200035d565b81600181146200039d5760028114620003a857620003dc565b60019150506200035d565b60ff841115620003bc57620003bc620004a0565b6001841b915084821115620003d557620003d5620004a0565b506200035d565b5060208310610133831016604e8410600b841016171562000414575081810a838111156200040e576200040e620004a0565b6200035d565b620004238484846001620002ff565b808604821115620004385762000438620004a0565b02949350505050565b60008160001904831182151516156200045e576200045e620004a0565b500290565b6002810460018216806200047857607f821691505b602082108114156200049a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b610dcf80620004c66000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80638da5cb5b116100b8578063a9059cbb1161007c578063a9059cbb14610242578063b7182b9514610255578063dd62ed3e1461025d578063ddf833f114610270578063e4fc6b6d14610278578063f2fde38b1461028057610137565b80638da5cb5b146101f75780638f32d59b1461020c57806395d89b4114610214578063a457c2d71461021c578063a64b6e5f1461022f57610137565b8063313ce567116100ff578063313ce567146101aa578063361416e1146101bf57806339509351146101c757806370a08231146101da578063715018a6146101ed57610137565b806306fdde031461013c578063095ea7b31461015a57806318160ddd1461017a5780631fce07d51461018f57806323b872dd14610197575b600080fd5b610144610293565b60405161015191906109e3565b60405180910390f35b61016d61016836600461099b565b610326565b60405161015191906109d8565b610182610343565b6040516101519190610ce3565b610182610349565b61016d6101a5366004610960565b61034f565b6101b26103e8565b6040516101519190610cec565b6101826103ed565b61016d6101d536600461099b565b6103f3565b6101826101e836600461090d565b610447565b6101f5610466565b005b6101ff610496565b60405161015191906109c4565b61016d6104a5565b6101446104b6565b61016d61022a36600461099b565b6104c5565b6101f561023d366004610960565b61053e565b61016d61025036600461099b565b61054e565b6101ff610562565b61018261026b36600461092e565b610571565b61016d61059c565b6101f56105d9565b6101f561028e36600461090d565b61066f565b6060600380546102a290610d48565b80601f01602080910402602001604051908101604052809291908181526020018280546102ce90610d48565b801561031b5780601f106102f05761010080835404028352916020019161031b565b820191906000526020600020905b8154815290600101906020018083116102fe57829003601f168201915b505050505090505b90565b600061033a6103336106c2565b84846106c6565b50600192915050565b60025490565b60095481565b600061035c84848461077a565b6001600160a01b03841660009081526001602052604081208161037d6106c2565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156103c95760405162461bcd60e51b81526004016103c090610b38565b60405180910390fd5b6103dd856103d56106c2565b8584036106c6565b506001949350505050565b601290565b60085481565b600061033a6104006106c2565b84846001600061040e6106c2565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546104429190610cfa565b6106c6565b6001600160a01b0381166000908152602081905260409020545b919050565b61046e6104a5565b61048a5760405162461bcd60e51b81526004016103c090610bfc565b61049460006108a4565b565b6005546001600160a01b031690565b6005546001600160a01b0316331490565b6060600480546102a290610d48565b600080600160006104d46106c2565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156105205760405162461bcd60e51b81526004016103c090610c9e565b61053461052b6106c2565b858584036106c6565b5060019392505050565b61054933838361077a565b505050565b600061033a61055b6106c2565b848461077a565b6006546001600160a01b031690565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000806008546105aa610343565b6105b49190610d12565b90506105bf30610447565b81116105cf576001915050610323565b6000915050610323565b6105e16104a5565b6105fd5760405162461bcd60e51b81526004016103c090610bfc565b60095461060d6224ea0042610d31565b101561062b5760405162461bcd60e51b81526004016103c090610c6f565b6000600854610638610343565b6106429190610d12565b905061064d30610447565b81111561066c5760405162461bcd60e51b81526004016103c090610b01565b50565b6106776104a5565b6106935760405162461bcd60e51b81526004016103c090610bfc565b6001600160a01b0381166106b95760405162461bcd60e51b81526004016103c090610b80565b61066c816108a4565b3390565b6001600160a01b0383166106ec5760405162461bcd60e51b81526004016103c090610c2b565b6001600160a01b0382166107125760405162461bcd60e51b81526004016103c090610a79565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061076d908590610ce3565b60405180910390a3505050565b6001600160a01b0383166107a05760405162461bcd60e51b81526004016103c090610bb7565b6001600160a01b0382166107c65760405162461bcd60e51b81526004016103c090610a36565b6107d1838383610549565b6001600160a01b0383166000908152602081905260409020548181101561080a5760405162461bcd60e51b81526004016103c090610abb565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610841908490610cfa565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161088b9190610ce3565b60405180910390a361089e848484610549565b50505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80356001600160a01b038116811461046157600080fd5b60006020828403121561091e578081fd5b610927826108f6565b9392505050565b60008060408385031215610940578081fd5b610949836108f6565b9150610957602084016108f6565b90509250929050565b600080600060608486031215610974578081fd5b61097d846108f6565b925061098b602085016108f6565b9150604084013590509250925092565b600080604083850312156109ad578182fd5b6109b6836108f6565b946020939093013593505050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b81811015610a0f578581018301518582016040015282016109f3565b81811115610a205783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b6020808252601b908201527f496e73756666696369656e742073746162696c69747920666565730000000000604082015260600190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b6020808252601d908201527f4e6577206f776e657220697320746865207a65726f2061646472657373000000604082015260600190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252601590820152744f6e6c79206f776e65722063616e2061636365737360581b604082015260600190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526015908201527457616974206174206c65617374203238206461797360581b604082015260600190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b90815260200190565b60ff91909116815260200190565b60008219821115610d0d57610d0d610d83565b500190565b6000816000190483118215151615610d2c57610d2c610d83565b500290565b600082821015610d4357610d43610d83565b500390565b600281046001821680610d5c57607f821691505b60208210811415610d7d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220f1b9c455dd75110a9a1767915245d5fcb3dd62852d91fe2536f1fd98bec972ff64736f6c63430008000033";

export class DomiToken__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DomiToken> {
    return super.deploy(overrides || {}) as Promise<DomiToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DomiToken {
    return super.attach(address) as DomiToken;
  }
  connect(signer: Signer): DomiToken__factory {
    return super.connect(signer) as DomiToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DomiTokenInterface {
    return new utils.Interface(_abi) as DomiTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DomiToken {
    return new Contract(address, _abi, signerOrProvider) as DomiToken;
  }
}
