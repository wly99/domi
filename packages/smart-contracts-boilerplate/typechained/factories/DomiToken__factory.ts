/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DomiToken, DomiTokenInterface } from "../DomiToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distribute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isSufficient",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastDistributed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currentOwnerAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "homeId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "mintWithHome",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numOfHolders",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "principalContract",
    outputs: [
      {
        internalType: "contract PrincipalInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "savingsRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setPrincipalContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060408051808201825260098152682237b6b4aa37b5b2b760b91b602080830191825283518085019094526004845263446f6d6960e01b9084015281519192916200005f9160039162000203565b5080516200007590600490602084019062000203565b5050600580546001600160a01b0319163317908190556040516001600160a01b039190911691506000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3620000f633620000d362000117565b620000e39060ff16600a62000351565b620000f090606462000446565b6200011c565b600780546001600160a01b0319163317905542600c556000600d55620004bb565b601290565b6001600160a01b0382166200014e5760405162461bcd60e51b81526004016200014590620002a9565b60405180910390fd5b6200015c60008383620001fe565b8060026000828254620001709190620002e9565b90915550506001600160a01b038216600090815260208190526040812080548392906200019f908490620002e9565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90620001e4908590620002e0565b60405180910390a3620001fa60008383620001fe565b5050565b505050565b828054620002119062000468565b90600052602060002090601f01602090048101928262000235576000855562000280565b82601f106200025057805160ff191683800117855562000280565b8280016001018555821562000280579182015b828111156200028057825182559160200191906001019062000263565b506200028e92915062000292565b5090565b5b808211156200028e576000815560010162000293565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60008219821115620002ff57620002ff620004a5565b500190565b80825b600180861162000318575062000348565b8187048211156200032d576200032d620004a5565b808616156200033b57918102915b9490941c93800262000307565b94509492505050565b600062000362600019848462000369565b9392505050565b6000826200037a5750600162000362565b81620003895750600062000362565b8160018114620003a25760028114620003ad57620003e1565b600191505062000362565b60ff841115620003c157620003c1620004a5565b6001841b915084821115620003da57620003da620004a5565b5062000362565b5060208310610133831016604e8410600b841016171562000419575081810a83811115620004135762000413620004a5565b62000362565b62000428848484600162000304565b8086048211156200043d576200043d620004a5565b02949350505050565b6000816000190483118215151615620004635762000463620004a5565b500290565b6002810460018216806200047d57607f821691505b602082108114156200049f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b61127880620004cb6000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80638f32d59b116100de578063cec8e0db11610097578063e213b5e911610071578063e213b5e9146102da578063e4fc6b6d146102e2578063efe9dbab146102ea578063f2fde38b146102f257610173565b8063cec8e0db146102ac578063dd62ed3e146102bf578063ddf833f1146102d257610173565b80638f32d59b1461025b57806395d89b4114610263578063a457c2d71461026b578063a64b6e5f1461027e578063a9059cbb14610291578063b7182b95146102a457610173565b8063395093511161013057806339509351146101fb5780634fcfacb51461020e5780636ecd067f1461022357806370a082311461022b578063715018a61461023e5780638da5cb5b1461024657610173565b806306fdde0314610178578063095ea7b31461019657806318160ddd146101b65780631fce07d5146101cb57806323b872dd146101d3578063313ce567146101e6575b600080fd5b610180610305565b60405161018d9190610e5c565b60405180910390f35b6101a96101a4366004610deb565b610398565b60405161018d9190610e48565b6101be6103b5565b60405161018d9190610e53565b6101be6103bb565b6101a96101e1366004610d7e565b6103c1565b6101ee61045c565b60405161018d919061115a565b6101a9610209366004610deb565b610461565b61022161021c366004610d32565b6104b5565b005b6101be6104fb565b6101be610239366004610d32565b610501565b610221610520565b61024e610550565b60405161018d9190610e34565b6101a961055f565b610180610570565b6101a9610279366004610deb565b61057f565b61022161028c366004610d7e565b6105f8565b6101a961029f366004610deb565b610707565b61024e61071b565b6101a96102ba366004610db9565b61072a565b6101be6102cd366004610d4c565b6107df565b6101a961080a565b6101be610847565b61022161084d565b61024e610a82565b610221610300366004610d32565b610a91565b606060038054610314906111d6565b80601f0160208091040260200160405190810160405280929190818152602001828054610340906111d6565b801561038d5780601f106103625761010080835404028352916020019161038d565b820191906000526020600020905b81548152906001019060200180831161037057829003601f168201915b505050505090505b90565b60006103ac6103a5610ae7565b8484610aeb565b50600192915050565b60025490565b600c5481565b60006103ce848484610b9f565b6001600160a01b0384166000908152600160205260408120816103ef610ae7565b6001600160a01b03166001600160a01b031681526020019081526020016000205490508281101561043b5760405162461bcd60e51b815260040161043290610f7a565b60405180910390fd5b61044f85610447610ae7565b858403610aeb565b60019150505b9392505050565b601290565b60006103ac61046e610ae7565b84846001600061047c610ae7565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546104b09190611168565b610aeb565b6104bd61055f565b6104d95760405162461bcd60e51b81526004016104329061103e565b600e80546001600160a01b0319166001600160a01b0392909216919091179055565b600b5481565b6001600160a01b0381166000908152602081905260409020545b919050565b61052861055f565b6105445760405162461bcd60e51b81526004016104329061103e565b61054e6000610cc9565b565b6005546001600160a01b031690565b6005546001600160a01b0316331490565b606060048054610314906111d6565b6000806001600061058e610ae7565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156105da5760405162461bcd60e51b815260040161043290611115565b6105ee6105e5610ae7565b85858403610aeb565b5060019392505050565b6001600160a01b03821660009081526009602052604090205460ff1661067e576001600160a01b0382166000818152600960205260408120805460ff191660019081179091556008805491820181559091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b03191690911790555b600e546001600160a01b03838116911614156106f757600e5460405163d1acffa760e01b81526001600160a01b039091169063d1acffa7906106c4908490600401610e53565b600060405180830381600087803b1580156106de57600080fd5b505af11580156106f2573d6000803e3d6000fd5b505050505b610702838383610b9f565b505050565b60006103ac610714610ae7565b8484610b9f565b6007546001600160a01b031690565b600061073461055f565b6107505760405162461bcd60e51b81526004016104329061103e565b60065460405163011998bf60e71b81526001600160a01b0390911690638ccc5f8090610780908690600401610e53565b602060405180830381600087803b15801561079a57600080fd5b505af11580156107ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d29190610e14565b1561045557506001610455565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600080600b546108186103b5565b61082291906111a0565b905061082d30610501565b811161083d576001915050610395565b6000915050610395565b600d5481565b61085561055f565b6108715760405162461bcd60e51b81526004016104329061103e565b600c546108816224ea00426111bf565b101561089f5760405162461bcd60e51b8152600401610432906110e6565b6000600b546108ac6103b5565b6108b691906111a0565b90506108c130610501565b8111156108e05760405162461bcd60e51b8152600401610432906110b1565b60085460005b8181101561070257600e54600880546001600160a01b03909216918390811061091f57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031614156109f557600e546001600160a01b031663d1acffa76109536103b5565b856109926008868154811061097857634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316610501565b61099c91906111a0565b6109a69190611180565b6040518263ffffffff1660e01b81526004016109c29190610e53565b600060405180830381600087803b1580156109dc57600080fd5b505af11580156109f0573d6000803e3d6000fd5b505050505b610a703060088381548110610a1a57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316610a376103b5565b86610a5c6008878154811061097857634e487b7160e01b600052603260045260246000fd5b610a6691906111a0565b61028c9190611180565b80610a7a81611211565b9150506108e6565b600e546001600160a01b031681565b610a9961055f565b610ab55760405162461bcd60e51b81526004016104329061103e565b6001600160a01b038116610adb5760405162461bcd60e51b815260040161043290610fc2565b610ae481610cc9565b50565b3390565b6001600160a01b038316610b115760405162461bcd60e51b81526004016104329061106d565b6001600160a01b038216610b375760405162461bcd60e51b815260040161043290610ef2565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610b92908590610e53565b60405180910390a3505050565b6001600160a01b038316610bc55760405162461bcd60e51b815260040161043290610ff9565b6001600160a01b038216610beb5760405162461bcd60e51b815260040161043290610eaf565b610bf6838383610702565b6001600160a01b03831660009081526020819052604090205481811015610c2f5760405162461bcd60e51b815260040161043290610f34565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610c66908490611168565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610cb09190610e53565b60405180910390a3610cc3848484610702565b50505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80356001600160a01b038116811461051b57600080fd5b600060208284031215610d43578081fd5b61045582610d1b565b60008060408385031215610d5e578081fd5b610d6783610d1b565b9150610d7560208401610d1b565b90509250929050565b600080600060608486031215610d92578081fd5b610d9b84610d1b565b9250610da960208501610d1b565b9150604084013590509250925092565b600080600060608486031215610dcd578283fd5b610dd684610d1b565b95602085013595506040909401359392505050565b60008060408385031215610dfd578182fd5b610e0683610d1b565b946020939093013593505050565b600060208284031215610e25578081fd5b81518015158114610455578182fd5b6001600160a01b0391909116815260200190565b901515815260200190565b90815260200190565b6000602080835283518082850152825b81811015610e8857858101830151858201604001528201610e6c565b81811115610e995783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b6020808252601d908201527f4e6577206f776e657220697320746865207a65726f2061646472657373000000604082015260600190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252601590820152744f6e6c79206f776e65722063616e2061636365737360581b604082015260600190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b6020808252818101527f496e73756666696369656e7420746f2070617920736176696e67732072617465604082015260600190565b60208082526015908201527457616974206174206c65617374203238206461797360581b604082015260600190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b60ff91909116815260200190565b6000821982111561117b5761117b61122c565b500190565b60008261119b57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156111ba576111ba61122c565b500290565b6000828210156111d1576111d161122c565b500390565b6002810460018216806111ea57607f821691505b6020821081141561120b57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156112255761122561122c565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220e2a5ab7e4de952f775c5b4cc783dd44bc95aada6add6d306f2b8632bd4db8fa964736f6c63430008000033";

export class DomiToken__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DomiToken> {
    return super.deploy(overrides || {}) as Promise<DomiToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DomiToken {
    return super.attach(address) as DomiToken;
  }
  connect(signer: Signer): DomiToken__factory {
    return super.connect(signer) as DomiToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DomiTokenInterface {
    return new utils.Interface(_abi) as DomiTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DomiToken {
    return new Contract(address, _abi, signerOrProvider) as DomiToken;
  }
}
