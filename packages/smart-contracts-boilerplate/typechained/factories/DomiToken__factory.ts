/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { DomiToken, DomiTokenInterface } from '../DomiToken';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'distribute',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTokenOwner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isOwner',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isSufficient',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastDistributed',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'numOfHolders',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'savingsRate',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b5060408051808201825260098152682237b6b4aa37b5b2b760b91b602080830191825283518085019094526004845263446f6d6960e01b9084015281519192916200005f9160039162000203565b5080516200007590600490602084019062000203565b5050600580546001600160a01b0319163317908190556040516001600160a01b039190911691506000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3620000f633620000d362000117565b620000e39060ff16600a62000351565b620000f090606462000446565b6200011c565b600680546001600160a01b0319163317905542600b556000600c55620004bb565b601290565b6001600160a01b0382166200014e5760405162461bcd60e51b81526004016200014590620002a9565b60405180910390fd5b6200015c60008383620001fe565b8060026000828254620001709190620002e9565b90915550506001600160a01b038216600090815260208190526040812080548392906200019f908490620002e9565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90620001e4908590620002e0565b60405180910390a3620001fa60008383620001fe565b5050565b505050565b828054620002119062000468565b90600052602060002090601f01602090048101928262000235576000855562000280565b82601f106200025057805160ff191683800117855562000280565b8280016001018555821562000280579182015b828111156200028057825182559160200191906001019062000263565b506200028e92915062000292565b5090565b5b808211156200028e576000815560010162000293565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60008219821115620002ff57620002ff620004a5565b500190565b80825b600180861162000318575062000348565b8187048211156200032d576200032d620004a5565b808616156200033b57918102915b9490941c93800262000307565b94509492505050565b600062000362600019848462000369565b9392505050565b6000826200037a5750600162000362565b81620003895750600062000362565b8160018114620003a25760028114620003ad57620003e1565b600191505062000362565b60ff841115620003c157620003c1620004a5565b6001841b915084821115620003da57620003da620004a5565b5062000362565b5060208310610133831016604e8410600b841016171562000419575081810a83811115620004135762000413620004a5565b62000362565b62000428848484600162000304565b8086048211156200043d576200043d620004a5565b02949350505050565b6000816000190483118215151615620004635762000463620004a5565b500290565b6002810460018216806200047d57607f821691505b602082108114156200049f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b610f6380620004cb6000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80638f32d59b116100b8578063b7182b951161007c578063b7182b9514610260578063dd62ed3e14610268578063ddf833f11461027b578063e213b5e914610283578063e4fc6b6d1461028b578063f2fde38b1461029357610142565b80638f32d59b1461021757806395d89b411461021f578063a457c2d714610227578063a64b6e5f1461023a578063a9059cbb1461024d57610142565b8063313ce5671161010a578063313ce567146101b557806339509351146101ca5780636ecd067f146101dd57806370a08231146101e5578063715018a6146101f85780638da5cb5b1461020257610142565b806306fdde0314610147578063095ea7b31461016557806318160ddd146101855780631fce07d51461019a57806323b872dd146101a2575b600080fd5b61014f6102a6565b60405161015c9190610b3c565b60405180910390f35b610178610173366004610af4565b610339565b60405161015c9190610b31565b61018d610356565b60405161015c9190610e3c565b61018d61035c565b6101786101b0366004610ab9565b610362565b6101bd6103fb565b60405161015c9190610e45565b6101786101d8366004610af4565b610400565b61018d610454565b61018d6101f3366004610a66565b61045a565b610200610479565b005b61020a6104a9565b60405161015c9190610b1d565b6101786104b8565b61014f6104c9565b610178610235366004610af4565b6104d8565b610200610248366004610ab9565b610551565b61017861025b366004610af4565b6105e7565b61020a6105fb565b61018d610276366004610a87565b61060a565b610178610635565b61018d610672565b610200610678565b6102006102a1366004610a66565b6107c5565b6060600380546102b590610ec1565b80601f01602080910402602001604051908101604052809291908181526020018280546102e190610ec1565b801561032e5780601f106103035761010080835404028352916020019161032e565b820191906000526020600020905b81548152906001019060200180831161031157829003601f168201915b505050505090505b90565b600061034d61034661081b565b848461081f565b50600192915050565b60025490565b600b5481565b600061036f8484846108d3565b6001600160a01b03841660009081526001602052604081208161039061081b565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156103dc5760405162461bcd60e51b81526004016103d390610c91565b60405180910390fd5b6103f0856103e861081b565b85840361081f565b506001949350505050565b601290565b600061034d61040d61081b565b84846001600061041b61081b565b6001600160a01b03908116825260208083019390935260409182016000908120918b168152925290205461044f9190610e53565b61081f565b600a5481565b6001600160a01b0381166000908152602081905260409020545b919050565b6104816104b8565b61049d5760405162461bcd60e51b81526004016103d390610d55565b6104a760006109fd565b565b6005546001600160a01b031690565b6005546001600160a01b0316331490565b6060600480546102b590610ec1565b600080600160006104e761081b565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156105335760405162461bcd60e51b81526004016103d390610df7565b61054761053e61081b565b8585840361081f565b5060019392505050565b6001600160a01b03821660009081526008602052604090205460ff166105d7576001600160a01b0382166000818152600860205260408120805460ff191660019081179091556007805491820181559091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880180546001600160a01b03191690911790555b6105e23383836108d3565b505050565b600061034d6105f461081b565b84846108d3565b6006546001600160a01b031690565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600080600a54610643610356565b61064d9190610e8b565b90506106583061045a565b8111610668576001915050610336565b6000915050610336565b600c5481565b6106806104b8565b61069c5760405162461bcd60e51b81526004016103d390610d55565b600b546106ac6224ea0042610eaa565b10156106ca5760405162461bcd60e51b81526004016103d390610dc8565b6000600a546106d7610356565b6106e19190610e8b565b90506106ec3061045a565b81111561070b5760405162461bcd60e51b81526004016103d390610c5a565b60075460005b818110156105e2576107b3306007838154811061073e57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031661075b610356565b8661079a6007878154811061078057634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031661045a565b6107a49190610e8b565b6107ae9190610e6b565b6108d3565b806107bd81610efc565b915050610711565b6107cd6104b8565b6107e95760405162461bcd60e51b81526004016103d390610d55565b6001600160a01b03811661080f5760405162461bcd60e51b81526004016103d390610cd9565b610818816109fd565b50565b3390565b6001600160a01b0383166108455760405162461bcd60e51b81526004016103d390610d84565b6001600160a01b03821661086b5760405162461bcd60e51b81526004016103d390610bd2565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906108c6908590610e3c565b60405180910390a3505050565b6001600160a01b0383166108f95760405162461bcd60e51b81526004016103d390610d10565b6001600160a01b03821661091f5760405162461bcd60e51b81526004016103d390610b8f565b61092a8383836105e2565b6001600160a01b038316600090815260208190526040902054818110156109635760405162461bcd60e51b81526004016103d390610c14565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061099a908490610e53565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516109e49190610e3c565b60405180910390a36109f78484846105e2565b50505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80356001600160a01b038116811461047457600080fd5b600060208284031215610a77578081fd5b610a8082610a4f565b9392505050565b60008060408385031215610a99578081fd5b610aa283610a4f565b9150610ab060208401610a4f565b90509250929050565b600080600060608486031215610acd578081fd5b610ad684610a4f565b9250610ae460208501610a4f565b9150604084013590509250925092565b60008060408385031215610b06578182fd5b610b0f83610a4f565b946020939093013593505050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b81811015610b6857858101830151858201604001528201610b4c565b81811115610b795783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b6020808252601b908201527f496e73756666696369656e742073746162696c69747920666565730000000000604082015260600190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b6020808252601d908201527f4e6577206f776e657220697320746865207a65726f2061646472657373000000604082015260600190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252601590820152744f6e6c79206f776e65722063616e2061636365737360581b604082015260600190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526015908201527457616974206174206c65617374203238206461797360581b604082015260600190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b90815260200190565b60ff91909116815260200190565b60008219821115610e6657610e66610f17565b500190565b600082610e8657634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610ea557610ea5610f17565b500290565b600082821015610ebc57610ebc610f17565b500390565b600281046001821680610ed557607f821691505b60208210811415610ef657634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415610f1057610f10610f17565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220906821350456295730490017faa58483f0f82ac96196fffeb75ce31c4811b50e64736f6c63430008000033';

export class DomiToken__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<DomiToken> {
    return super.deploy(overrides || {}) as Promise<DomiToken>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DomiToken {
    return super.attach(address) as DomiToken;
  }
  connect(signer: Signer): DomiToken__factory {
    return super.connect(signer) as DomiToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DomiTokenInterface {
    return new utils.Interface(_abi) as DomiTokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DomiToken {
    return new Contract(address, _abi, signerOrProvider) as DomiToken;
  }
}
