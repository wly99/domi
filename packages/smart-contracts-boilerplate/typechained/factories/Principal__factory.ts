/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Principal, PrincipalInterface } from "../Principal";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "renterAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balanceOwed",
        type: "uint256",
      },
    ],
    name: "ClaimRestOfPenalty",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "PenaltyPaid",
    type: "event",
  },
  {
    inputs: [],
    name: "domiContract",
    outputs: [
      {
        internalType: "contract DomiInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "principalBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reservesContract",
    outputs: [
      {
        internalType: "contract ReservesInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setDomiContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setReservesContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36103eb806100696000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b146100f35780638f32d59b146100fb578063bda1916114610110578063f2fde38b14610118578063fa91ec0b1461012b57610093565b80631c9c83a5146100985780633a68eaf6146100ad5780636babe43b146100cb578063715018a6146100eb575b600080fd5b6100ab6100a63660046102f9565b61013e565b005b6100b561018d565b6040516100c29190610327565b60405180910390f35b6100de6100d93660046102f9565b61019c565b6040516100c291906103ac565b6100ab6101ae565b6100b56101de565b6101036101ed565b6040516100c2919061033b565b6100b56101fe565b6100ab6101263660046102f9565b61020d565b6100ab6101393660046102f9565b610263565b6101466101ed565b61016b5760405162461bcd60e51b81526004016101629061037d565b60405180910390fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b60016020526000908152604090205481565b6101b66101ed565b6101d25760405162461bcd60e51b81526004016101629061037d565b6101dc60006102a9565b565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b6002546001600160a01b031681565b6102156101ed565b6102315760405162461bcd60e51b81526004016101629061037d565b6001600160a01b0381166102575760405162461bcd60e51b815260040161016290610346565b610260816102a9565b50565b61026b6101ed565b6102875760405162461bcd60e51b81526004016101629061037d565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561030a578081fd5b81356001600160a01b0381168114610320578182fd5b9392505050565b6001600160a01b0391909116815260200190565b901515815260200190565b6020808252601d908201527f4e6577206f776e657220697320746865207a65726f2061646472657373000000604082015260600190565b6020808252601590820152744f6e6c79206f776e65722063616e2061636365737360581b604082015260600190565b9081526020019056fea2646970667358221220538c001d542b88821097806876cee71a1dd8a4dfb39a4c4abc5065a49d1e64ef64736f6c63430008000033";

export class Principal__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Principal> {
    return super.deploy(overrides || {}) as Promise<Principal>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Principal {
    return super.attach(address) as Principal;
  }
  connect(signer: Signer): Principal__factory {
    return super.connect(signer) as Principal__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrincipalInterface {
    return new utils.Interface(_abi) as PrincipalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Principal {
    return new Contract(address, _abi, signerOrProvider) as Principal;
  }
}
