/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Distributor, DistributorInterface } from "../Distributor";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "distribute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "domiContract",
    outputs: [
      {
        internalType: "contract DomiInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "domiHolders",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isSufficient",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastDistributed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setDomiContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3426001556108948061006d6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638f32d59b116100715780638f32d59b14610111578063bda1916114610126578063ddf833f11461012e578063e4fc6b6d14610136578063f2fde38b1461013e578063fa91ec0b14610151576100a9565b8063022c5aba146100ae5780631fce07d5146100d757806327e235e3146100ec578063715018a6146100ff5780638da5cb5b14610109575b600080fd5b6100c16100bc3660046106ee565b610164565b6040516100ce919061071e565b60405180910390f35b6100df61018e565b6040516100ce9190610809565b6100df6100fa3660046106c0565b610194565b6101076101a6565b005b6100c16101df565b6101196101ef565b6040516100ce9190610732565b6100c1610200565b61011961020f565b6101076103c8565b61010761014c3660046106c0565b6105d4565b61010761015f3660046106c0565b61062a565b6002818154811061017457600080fd5b6000918252602090912001546001600160a01b0316905081565b60015481565b60046020526000908152604090205481565b6101ae6101ef565b6101d35760405162461bcd60e51b81526004016101ca906107ab565b60405180910390fd5b6101dd6000610670565b565b6000546001600160a01b03165b90565b6000546001600160a01b0316331490565b6003546001600160a01b031681565b600080600360009054906101000a90046001600160a01b03166001600160a01b0316633d6c90576040518163ffffffff1660e01b815260040160206040518083038186803b15801561026057600080fd5b505afa158015610274573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102989190610706565b9050600081600360009054906101000a90046001600160a01b03166001600160a01b031663c4e41b226040518163ffffffff1660e01b815260040160206040518083038186803b1580156102eb57600080fd5b505afa1580156102ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103239190610706565b61032d9190610812565b6003546040516370a0823160e01b81529192506001600160a01b0316906370a082319061035e90309060040161071e565b60206040518083038186803b15801561037657600080fd5b505afa15801561038a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ae9190610706565b81116103bf576001925050506101ec565b60009250505090565b6103d06101ef565b6103ec5760405162461bcd60e51b81526004016101ca906107ab565b6001546103fc6224ea0042610831565b101561041a5760405162461bcd60e51b81526004016101ca906107da565b60035460408051633d6c905760e01b815290516000926001600160a01b031691633d6c9057916004808301926020929190829003018186803b15801561045f57600080fd5b505afa158015610473573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104979190610706565b90506000600360009054906101000a90046001600160a01b03166001600160a01b031663c4e41b226040518163ffffffff1660e01b815260040160206040518083038186803b1580156104e957600080fd5b505afa1580156104fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105219190610706565b9050600061052f8383610812565b6003546040516370a0823160e01b81529192506001600160a01b0316906370a082319061056090309060040161071e565b60206040518083038186803b15801561057857600080fd5b505afa15801561058c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b09190610706565b8111156105cf5760405162461bcd60e51b81526004016101ca9061073d565b505050565b6105dc6101ef565b6105f85760405162461bcd60e51b81526004016101ca906107ab565b6001600160a01b03811661061e5760405162461bcd60e51b81526004016101ca90610774565b61062781610670565b50565b6106326101ef565b61064e5760405162461bcd60e51b81526004016101ca906107ab565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156106d1578081fd5b81356001600160a01b03811681146106e7578182fd5b9392505050565b6000602082840312156106ff578081fd5b5035919050565b600060208284031215610717578081fd5b5051919050565b6001600160a01b0391909116815260200190565b901515815260200190565b6020808252601b908201527f496e73756666696369656e742073746162696c69747920666565730000000000604082015260600190565b6020808252601d908201527f4e6577206f776e657220697320746865207a65726f2061646472657373000000604082015260600190565b6020808252601590820152744f6e6c79206f776e65722063616e2061636365737360581b604082015260600190565b60208082526015908201527457616974206174206c65617374203238206461797360581b604082015260600190565b90815260200190565b600081600019048311821515161561082c5761082c610848565b500290565b60008282101561084357610843610848565b500390565b634e487b7160e01b600052601160045260246000fdfea264697066735822122087a1ba636ca7af312e4bd4703423a8f98cc30ac17948f5a737d5d0f101dc39a764736f6c63430008000033";

export class Distributor__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Distributor> {
    return super.deploy(overrides || {}) as Promise<Distributor>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Distributor {
    return super.attach(address) as Distributor;
  }
  connect(signer: Signer): Distributor__factory {
    return super.connect(signer) as Distributor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DistributorInterface {
    return new utils.Interface(_abi) as DistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Distributor {
    return new Contract(address, _abi, signerOrProvider) as Distributor;
  }
}
