/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MonthlyPaymentsCalculator, MonthlyPaymentsCalculatorInterface } from '../MonthlyPaymentsCalculator';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'stabilityFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'monthsLeft',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'principal',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'shortfall',
        type: 'uint256',
      },
    ],
    name: 'calculatePMT',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'homeId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'renterAddress',
        type: 'address',
      },
    ],
    name: 'calculatePayment',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'principal',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'timePeriods',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'rate',
        type: 'uint256',
      },
    ],
    name: 'compound',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'domiContract',
    outputs: [
      {
        internalType: 'contract DomiInterface',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'homeContractsContract',
    outputs: [
      {
        internalType: 'contract HomeContractsInterface',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isOwner',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'a',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'b',
        type: 'uint256',
      },
    ],
    name: 'min',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int128',
        name: 'ratePerPeriod',
        type: 'int128',
      },
      {
        internalType: 'int128',
        name: 'numberOfPayments',
        type: 'int128',
      },
      {
        internalType: 'int128',
        name: 'presentValue',
        type: 'int128',
      },
      {
        internalType: 'int128',
        name: 'futureValue',
        type: 'int128',
      },
    ],
    name: 'pmt',
    outputs: [
      {
        internalType: 'int128',
        name: '',
        type: 'int128',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'principalContract',
    outputs: [
      {
        internalType: 'contract PrincipalInterface',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_address',
        type: 'address',
      },
    ],
    name: 'setDomiContractAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_address',
        type: 'address',
      },
    ],
    name: 'setHomeContractsContractAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_address',
        type: 'address',
      },
    ],
    name: 'setPrincipalContractAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'homePrice',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'stabilityFee',
        type: 'uint256',
      },
    ],
    name: 'testCalculateBufferPayment',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'homePrice',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'stabilityFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'monthsLeft',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'principal',
        type: 'uint256',
      },
    ],
    name: 'testCalculatePrincipalPayment',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'homePrice',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'stabilityFee',
        type: 'uint256',
      },
    ],
    name: 'testCalculateStabilityFeePayment',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '';

export class MonthlyPaymentsCalculator__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<MonthlyPaymentsCalculator> {
    return super.deploy(overrides || {}) as Promise<MonthlyPaymentsCalculator>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MonthlyPaymentsCalculator {
    return super.attach(address) as MonthlyPaymentsCalculator;
  }
  connect(signer: Signer): MonthlyPaymentsCalculator__factory {
    return super.connect(signer) as MonthlyPaymentsCalculator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MonthlyPaymentsCalculatorInterface {
    return new utils.Interface(_abi) as MonthlyPaymentsCalculatorInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MonthlyPaymentsCalculator {
    return new Contract(address, _abi, signerOrProvider) as MonthlyPaymentsCalculator;
  }
}
