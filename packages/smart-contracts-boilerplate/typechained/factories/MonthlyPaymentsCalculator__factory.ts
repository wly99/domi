/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MonthlyPaymentsCalculator,
  MonthlyPaymentsCalculatorInterface,
} from "../MonthlyPaymentsCalculator";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "homeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "renterAddress",
        type: "uint256",
      },
    ],
    name: "calculatePayment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "min",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setDomiContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setHomeContractsContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setPrincipalContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36108f3806100696000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80637ae2b5c7116100665780637ae2b5c7146100f35780638da5cb5b146101135780638f32d59b14610128578063f2fde38b1461013d578063fa91ec0b1461015057610093565b806332b9669f146100985780634fcfacb5146100ad5780636e246a5b146100c0578063715018a6146100eb575b600080fd5b6100ab6100a6366004610606565b610163565b005b6100ab6100bb366004610606565b610196565b6100d36100ce366004610645565b6101c9565b6040516100e29392919061070f565b60405180910390f35b6100ab6103c4565b610106610101366004610645565b6103e1565b6040516100e291906106f8565b61011b6103fa565b6040516100e29190610693565b610130610409565b6040516100e291906106a7565b6100ab61014b366004610606565b61041a565b6100ab61015e366004610606565b610466565b61016b610409565b61017457600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b61019e610409565b6101a757600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b60025460405163b93a89f760e01b815260009182918291829182918291829182916001600160a01b039091169063b93a89f79061020a908d906004016106f8565b60606040518083038186803b15801561022257600080fd5b505afa158015610236573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025a9190610666565b9196509450925060008461026f85600c610871565b6102799190610890565b9050600160009054906101000a90046001600160a01b03166001600160a01b0316633d6c90576040518163ffffffff1660e01b815260040160206040518083038186803b1580156102c957600080fd5b505afa1580156102dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610301919061062d565b600354604051630f7306e360e11b81529194506001600160a01b031690631ee60dc690610334908e908e90600401610701565b60206040518083038186803b15801561034c57600080fd5b505afa158015610360573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610384919061062d565b915060008060006103958987610499565b92506103a3898786886104d3565b91506103af8987610560565b929e919d50919b509950505050505050505050565b6103cc610409565b6103d557600080fd5b6103df60006105a6565b565b6000818311156103f157816103f3565b825b9392505050565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b610422610409565b61042b57600080fd5b6001600160a01b03811661045a5760405162461bcd60e51b8152600401610451906106b2565b60405180910390fd5b610463816105a6565b50565b61046e610409565b61047757600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000600a600c6104a98486610871565b6104b3919061073d565b6104be90600a610871565b6104c9906005610725565b6103f3919061073d565b6000600a6104e2600c8661073d565b6001856104f0600c8961073d565b6104fb906001610725565b61050591906107a3565b61050f9190610890565b6105198886610725565b610523919061073d565b61052d9085610871565b6105379190610871565b61054290600a610871565b61054d906005610725565b610557919061073d565b95945050505050565b6000600a6104b3600c610574866064610871565b61057e919061073d565b85600c61058d87612710610871565b610597919061073d565b6105a19190610871565b6105f6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000818310156103f157816103f3565b600060208284031215610617578081fd5b81356001600160a01b03811681146103f3578182fd5b60006020828403121561063e578081fd5b5051919050565b60008060408385031215610657578081fd5b50508035926020909101359150565b60008060006060848603121561067a578081fd5b8351925060208401519150604084015190509250925092565b6001600160a01b0391909116815260200190565b901515815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b90815260200190565b918252602082015260400190565b9283526020830191909152604082015260600190565b60008219821115610738576107386108a7565b500190565b60008261075857634e487b7160e01b81526012600452602481fd5b500490565b80825b600180861161076f575061079a565b818704821115610781576107816108a7565b8086161561078e57918102915b9490941c938002610760565b94509492505050565b60006103f360001984846000826107bc575060016103f3565b816107c9575060006103f3565b81600181146107df57600281146107e957610816565b60019150506103f3565b60ff8411156107fa576107fa6108a7565b6001841b915084821115610810576108106108a7565b506103f3565b5060208310610133831016604e8410600b8410161715610849575081810a83811115610844576108446108a7565b6103f3565b610856848484600161075d565b808604821115610868576108686108a7565b02949350505050565b600081600019048311821515161561088b5761088b6108a7565b500290565b6000828210156108a2576108a26108a7565b500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212207cc61b1d797d91ebe832cb6f49ea80e10c8016977b22a6434ac723b25b33c1a364736f6c63430008000033";

export class MonthlyPaymentsCalculator__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MonthlyPaymentsCalculator> {
    return super.deploy(overrides || {}) as Promise<MonthlyPaymentsCalculator>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MonthlyPaymentsCalculator {
    return super.attach(address) as MonthlyPaymentsCalculator;
  }
  connect(signer: Signer): MonthlyPaymentsCalculator__factory {
    return super.connect(signer) as MonthlyPaymentsCalculator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MonthlyPaymentsCalculatorInterface {
    return new utils.Interface(_abi) as MonthlyPaymentsCalculatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MonthlyPaymentsCalculator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MonthlyPaymentsCalculator;
  }
}
