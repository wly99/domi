/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MonthlyPaymentsCalculator,
  MonthlyPaymentsCalculatorInterface,
} from "../MonthlyPaymentsCalculator";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "homeId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "renterAddress",
        type: "address",
      },
    ],
    name: "calculatePayment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "principal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timePeriods",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    name: "compound",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "domiContract",
    outputs: [
      {
        internalType: "contract DomiInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "homeContractsContract",
    outputs: [
      {
        internalType: "contract HomeContractsInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "min",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "principalContract",
    outputs: [
      {
        internalType: "contract PrincipalInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setDomiContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setHomeContractsContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setPrincipalContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "homePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stabilityFee",
        type: "uint256",
      },
    ],
    name: "testCalculateBufferPayment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "homePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stabilityFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "monthsLeft",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "principal",
        type: "uint256",
      },
    ],
    name: "testCalculatePrincipalPayment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "homePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stabilityFee",
        type: "uint256",
      },
    ],
    name: "testCalculateStabilityFeePayment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3610bce806100696000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063b52a998a11610097578063f2fde38b11610066578063f2fde38b146101e8578063f3c85eba146101fb578063f58750151461020e578063fa91ec0b1461022157610100565b8063b52a998a146101bd578063bda19161146101d0578063ca4f7ab3146101d8578063efe9dbab146101e057610100565b80638ab96090116100d35780638ab960901461015e5780638da5cb5b146101715780638f32d59b14610186578063b06bea901461019b57610100565b806332b9669f146101055780634fcfacb51461011a578063715018a61461012d5780637ae2b5c714610135575b600080fd5b610118610113366004610823565b610234565b005b610118610128366004610823565b610283565b6101186102c9565b610148610143366004610880565b6102f9565b60405161015591906109af565b60405180910390f35b61014861016c366004610880565b610314565b610179610320565b604051610155919061092a565b61018e61032f565b604051610155919061093e565b6101ae6101a9366004610855565b610340565b604051610155939291906109cf565b6101486101cb366004610880565b61053b565b610179610547565b610179610556565b610179610565565b6101186101f6366004610823565b610574565b6101486102093660046108a1565b6105ca565b61014861021c3660046108f9565b61062f565b61011861022f366004610823565b610646565b61023c61032f565b6102615760405162461bcd60e51b815260040161025890610980565b60405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b61028b61032f565b6102a75760405162461bcd60e51b815260040161025890610980565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6102d161032f565b6102ed5760405162461bcd60e51b815260040161025890610980565b6102f7600061068c565b565b600081831115610309578161030b565b825b90505b92915050565b600061030b83836106dc565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b60025460405163b93a89f760e01b815260009182918291829182918291829182916001600160a01b039091169063b93a89f790610381908d906004016109af565b60606040518083038186803b15801561039957600080fd5b505afa1580156103ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d191906108cc565b919650945092506000846103e685600c610b31565b6103f09190610b50565b9050600160009054906101000a90046001600160a01b03166001600160a01b0316633d6c90576040518163ffffffff1660e01b815260040160206040518083038186803b15801561044057600080fd5b505afa158015610454573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610478919061083d565b600354604051633ef59e5560e21b81529194506001600160a01b03169063fbd67954906104ab908e908e906004016109b8565b60206040518083038186803b1580156104c357600080fd5b505afa1580156104d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fb919061083d565b9150600080600061050c8987610754565b925061051a89878688610784565b915061052689876106dc565b929e919d50919b509950505050505050505050565b600061030b8383610754565b6001546001600160a01b031681565b6002546001600160a01b031681565b6003546001600160a01b031681565b61057c61032f565b6105985760405162461bcd60e51b815260040161025890610980565b6001600160a01b0381166105be5760405162461bcd60e51b815260040161025890610949565b6105c78161068c565b50565b6000805b8381101561061857620186a0600c6105e68588610b31565b6105f091906109fd565b6105fa91906109fd565b61060490866109e5565b94508061061081610b67565b9150506105ce565b506106256103e8856109fd565b90505b9392505050565b600061063d85858585610784565b95945050505050565b61064e61032f565b61066a5760405162461bcd60e51b815260040161025890610980565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600c6106ec856064610b31565b6106f691906109fd565b9050600084600c61070986612710610b31565b61071391906109fd565b61071d9190610b31565b9050818110610748576107346305f5e100826109fd565b61073f9060016109e5565b9250505061030e565b6107346103e8836109fd565b60006103e8600c6107658486610b31565b61076f91906109fd565b61077991906109fd565b61030b9060016109e5565b6000806107928385876105ca565b905060006107a08288610b50565b90506000856107b0600c896109fd565b6107bb9060016109e5565b6107c59190610a63565b6107d09060016109fd565b6107db906001610b50565b600c6107e78985610b31565b6107f191906109fd565b6107fb91906109fd565b98975050505050505050565b80356001600160a01b038116811461081e57600080fd5b919050565b600060208284031215610834578081fd5b61030b82610807565b60006020828403121561084e578081fd5b5051919050565b60008060408385031215610867578081fd5b8235915061087760208401610807565b90509250929050565b60008060408385031215610892578182fd5b50508035926020909101359150565b6000806000606084860312156108b5578081fd5b505081359360208301359350604090920135919050565b6000806000606084860312156108e0578283fd5b8351925060208401519150604084015190509250925092565b6000806000806080858703121561090e578081fd5b5050823594602084013594506040840135936060013592509050565b6001600160a01b0391909116815260200190565b901515815260200190565b6020808252601d908201527f4e6577206f776e657220697320746865207a65726f2061646472657373000000604082015260600190565b6020808252601590820152744f6e6c79206f776e65722063616e2061636365737360581b604082015260600190565b90815260200190565b9182526001600160a01b0316602082015260400190565b9283526020830191909152604082015260600190565b600082198211156109f8576109f8610b82565b500190565b600082610a1857634e487b7160e01b81526012600452602481fd5b500490565b80825b6001808611610a2f5750610a5a565b818704821115610a4157610a41610b82565b80861615610a4e57918102915b9490941c938002610a20565b94509492505050565b600061030b6000198484600082610a7c57506001610628565b81610a8957506000610628565b8160018114610a9f5760028114610aa957610ad6565b6001915050610628565b60ff841115610aba57610aba610b82565b6001841b915084821115610ad057610ad0610b82565b50610628565b5060208310610133831016604e8410600b8410161715610b09575081810a83811115610b0457610b04610b82565b610628565b610b168484846001610a1d565b808604821115610b2857610b28610b82565b02949350505050565b6000816000190483118215151615610b4b57610b4b610b82565b500290565b600082821015610b6257610b62610b82565b500390565b6000600019821415610b7b57610b7b610b82565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212209c8bd2354988ab061caa55c2b8bfec3c62cb597163ba09dfd764f8a86b7cdb5564736f6c63430008000033";

export class MonthlyPaymentsCalculator__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MonthlyPaymentsCalculator> {
    return super.deploy(overrides || {}) as Promise<MonthlyPaymentsCalculator>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MonthlyPaymentsCalculator {
    return super.attach(address) as MonthlyPaymentsCalculator;
  }
  connect(signer: Signer): MonthlyPaymentsCalculator__factory {
    return super.connect(signer) as MonthlyPaymentsCalculator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MonthlyPaymentsCalculatorInterface {
    return new utils.Interface(_abi) as MonthlyPaymentsCalculatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MonthlyPaymentsCalculator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MonthlyPaymentsCalculator;
  }
}
