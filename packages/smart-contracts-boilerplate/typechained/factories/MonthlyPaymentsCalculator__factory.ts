/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MonthlyPaymentsCalculator,
  MonthlyPaymentsCalculatorInterface,
} from "../MonthlyPaymentsCalculator";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "homeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "renterAddress",
        type: "uint256",
      },
    ],
    name: "calculatePayment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "min",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setDomiContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setHomeContractsContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setPrincipalContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "homePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stabilityFee",
        type: "uint256",
      },
    ],
    name: "testCalculateBufferPayment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "homePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stabilityFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "monthsLeft",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "principal",
        type: "uint256",
      },
    ],
    name: "testCalculatePrincipalPayment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "homePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stabilityFee",
        type: "uint256",
      },
    ],
    name: "testCalculateStabilityFeePayment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3610987806100696000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b146101475780638f32d59b1461015c578063b52a998a14610171578063f2fde38b14610184578063f587501514610197578063fa91ec0b146101aa576100b4565b806332b9669f146100b95780634fcfacb5146100ce5780636e246a5b146100e1578063715018a61461010c5780637ae2b5c7146101145780638ab9609014610134575b600080fd5b6100cc6100c7366004610662565b6101bd565b005b6100cc6100dc366004610662565b6101f0565b6100f46100ef3660046106a8565b610223565b604051610103939291906107a3565b60405180910390f35b6100cc61041e565b6101276101223660046106a8565b61043b565b604051610103919061078c565b6101276101423660046106a8565b610456565b61014f610462565b6040516101039190610727565b610164610471565b604051610103919061073b565b61012761017f3660046106a8565b610482565b6100cc610192366004610662565b61048e565b6101276101a53660046106f6565b6104da565b6100cc6101b8366004610662565b6104f1565b6101c5610471565b6101ce57600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6101f8610471565b61020157600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b60025460405163b93a89f760e01b815260009182918291829182918291829182916001600160a01b039091169063b93a89f790610264908d9060040161078c565b60606040518083038186803b15801561027c57600080fd5b505afa158015610290573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b491906106c9565b919650945092506000846102c985600c610905565b6102d39190610924565b9050600160009054906101000a90046001600160a01b03166001600160a01b0316633d6c90576040518163ffffffff1660e01b815260040160206040518083038186803b15801561032357600080fd5b505afa158015610337573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035b9190610690565b600354604051630f7306e360e11b81529194506001600160a01b031690631ee60dc69061038e908e908e90600401610795565b60206040518083038186803b1580156103a657600080fd5b505afa1580156103ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103de9190610690565b915060008060006103ef8987610524565b92506103fd89878688610554565b9150610409898761059a565b929e919d50919b509950505050505050505050565b610426610471565b61042f57600080fd5b6104396000610612565b565b60008183111561044b578161044d565b825b90505b92915050565b600061044d838361059a565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b600061044d8383610524565b610496610471565b61049f57600080fd5b6001600160a01b0381166104ce5760405162461bcd60e51b81526004016104c590610746565b60405180910390fd5b6104d781610612565b50565b60006104e885858585610554565b95945050505050565b6104f9610471565b61050257600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60006103e8600c6105358486610905565b61053f91906107d1565b61054991906107d1565b61044d9060016107b9565b60008083620186a0610567600c886107d1565b61057191906107d1565b61057c9060016107b9565b6105869190610837565b6105909084610905565b9695505050505050565b600080600c6105aa856064610905565b6105b491906107d1565b9050600084600c6105c786612710610905565b6105d191906107d1565b6105db9190610905565b9050818110610606576105f26305f5e100826107d1565b6105fd9060016107b9565b92505050610450565b6105f26103e8836107d1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610673578081fd5b81356001600160a01b0381168114610689578182fd5b9392505050565b6000602082840312156106a1578081fd5b5051919050565b600080604083850312156106ba578081fd5b50508035926020909101359150565b6000806000606084860312156106dd578081fd5b8351925060208401519150604084015190509250925092565b6000806000806080858703121561070b578081fd5b5050823594602084013594506040840135936060013592509050565b6001600160a01b0391909116815260200190565b901515815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b90815260200190565b918252602082015260400190565b9283526020830191909152604082015260600190565b600082198211156107cc576107cc61093b565b500190565b6000826107ec57634e487b7160e01b81526012600452602481fd5b500490565b80825b6001808611610803575061082e565b8187048211156108155761081561093b565b8086161561082257918102915b9490941c9380026107f4565b94509492505050565b600061044d600019848460008261085057506001610689565b8161085d57506000610689565b8160018114610873576002811461087d576108aa565b6001915050610689565b60ff84111561088e5761088e61093b565b6001841b9150848211156108a4576108a461093b565b50610689565b5060208310610133831016604e8410600b84101617156108dd575081810a838111156108d8576108d861093b565b610689565b6108ea84848460016107f1565b8086048211156108fc576108fc61093b565b02949350505050565b600081600019048311821515161561091f5761091f61093b565b500290565b6000828210156109365761093661093b565b500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212208e852b04dfea5e9f33a4c4921769b58dcbd2ef40976e411b65cf3d4724bb395864736f6c63430008000033";

export class MonthlyPaymentsCalculator__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MonthlyPaymentsCalculator> {
    return super.deploy(overrides || {}) as Promise<MonthlyPaymentsCalculator>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MonthlyPaymentsCalculator {
    return super.attach(address) as MonthlyPaymentsCalculator;
  }
  connect(signer: Signer): MonthlyPaymentsCalculator__factory {
    return super.connect(signer) as MonthlyPaymentsCalculator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MonthlyPaymentsCalculatorInterface {
    return new utils.Interface(_abi) as MonthlyPaymentsCalculatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MonthlyPaymentsCalculator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MonthlyPaymentsCalculator;
  }
}
