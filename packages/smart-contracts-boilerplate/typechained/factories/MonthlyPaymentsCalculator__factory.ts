/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MonthlyPaymentsCalculator, MonthlyPaymentsCalculatorInterface } from '../MonthlyPaymentsCalculator';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'homeId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'renterAddress',
        type: 'uint256',
      },
    ],
    name: 'calculatePayment',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isOwner',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'a',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'b',
        type: 'uint256',
      },
    ],
    name: 'min',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_address',
        type: 'address',
      },
    ],
    name: 'setDomiContractAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_address',
        type: 'address',
      },
    ],
    name: 'setHomeContractsContractAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_address',
        type: 'address',
      },
    ],
    name: 'setPrincipalContractAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'homePrice',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'stabilityFee',
        type: 'uint256',
      },
    ],
    name: 'testCalculateBufferPayment',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'homePrice',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'stabilityFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'monthsLeft',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'principal',
        type: 'uint256',
      },
    ],
    name: 'testCalculatePrincipalPayment',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'homePrice',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'stabilityFee',
        type: 'uint256',
      },
    ],
    name: 'testCalculateStabilityFeePayment',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3610838806100696000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b146101475780638f32d59b1461015c578063b52a998a14610171578063f2fde38b14610184578063f587501514610197578063fa91ec0b146101aa576100b4565b806332b9669f146100b95780634fcfacb5146100ce5780636e246a5b146100e1578063715018a61461010c5780637ae2b5c7146101145780638ab9609014610134575b600080fd5b6100cc6100c7366004610627565b6101bd565b005b6100cc6100dc366004610627565b6101f0565b6100f46100ef36600461066d565b610223565b60405161010393929190610768565b60405180910390f35b6100cc61041e565b61012761012236600461066d565b61043b565b6040516101039190610751565b61012761014236600461066d565b610456565b61014f610462565b60405161010391906106ec565b610164610471565b6040516101039190610700565b61012761017f36600461066d565b610482565b6100cc610192366004610627565b61048e565b6101276101a53660046106bb565b6104da565b6100cc6101b8366004610627565b6104f1565b6101c5610471565b6101ce57600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6101f8610471565b61020157600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b60025460405163b93a89f760e01b815260009182918291829182918291829182916001600160a01b039091169063b93a89f790610264908d90600401610751565b60606040518083038186803b15801561027c57600080fd5b505afa158015610290573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b4919061068e565b919650945092506000846102c985600c6107b6565b6102d391906107d5565b9050600160009054906101000a90046001600160a01b03166001600160a01b0316633d6c90576040518163ffffffff1660e01b815260040160206040518083038186803b15801561032357600080fd5b505afa158015610337573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035b9190610655565b600354604051630f7306e360e11b81529194506001600160a01b031690631ee60dc69061038e908e908e9060040161075a565b60206040518083038186803b1580156103a657600080fd5b505afa1580156103ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103de9190610655565b915060008060006103ef8987610524565b92506103fd89878688610554565b9150610409898761055f565b929e919d50919b509950505050505050505050565b610426610471565b61042f57600080fd5b61043960006105d7565b565b60008183111561044b578161044d565b825b90505b92915050565b600061044d838361055f565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b600061044d8383610524565b610496610471565b61049f57600080fd5b6001600160a01b0381166104ce5760405162461bcd60e51b81526004016104c59061070b565b60405180910390fd5b6104d7816105d7565b50565b60006104e885858585610554565b95945050505050565b6104f9610471565b61050257600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60006103e8600c61053584866107b6565b61053f9190610796565b6105499190610796565b61044d90600161077e565b614f47949350505050565b600080600c61056f8560646107b6565b6105799190610796565b9050600084600c61058c866127106107b6565b6105969190610796565b6105a091906107b6565b90508181106105cb576105b76305f5e10082610796565b6105c290600161077e565b92505050610450565b6105b76103e883610796565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610638578081fd5b81356001600160a01b038116811461064e578182fd5b9392505050565b600060208284031215610666578081fd5b5051919050565b6000806040838503121561067f578081fd5b50508035926020909101359150565b6000806000606084860312156106a2578081fd5b8351925060208401519150604084015190509250925092565b600080600080608085870312156106d0578081fd5b5050823594602084013594506040840135936060013592509050565b6001600160a01b0391909116815260200190565b901515815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b90815260200190565b918252602082015260400190565b9283526020830191909152604082015260600190565b60008219821115610791576107916107ec565b500190565b6000826107b157634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156107d0576107d06107ec565b500290565b6000828210156107e7576107e76107ec565b500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212200fd94024020c8ddf5398325183baca789a410f3872bb64af343d06fb2933335664736f6c63430008000033';

export class MonthlyPaymentsCalculator__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<MonthlyPaymentsCalculator> {
    return super.deploy(overrides || {}) as Promise<MonthlyPaymentsCalculator>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MonthlyPaymentsCalculator {
    return super.attach(address) as MonthlyPaymentsCalculator;
  }
  connect(signer: Signer): MonthlyPaymentsCalculator__factory {
    return super.connect(signer) as MonthlyPaymentsCalculator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MonthlyPaymentsCalculatorInterface {
    return new utils.Interface(_abi) as MonthlyPaymentsCalculatorInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MonthlyPaymentsCalculator {
    return new Contract(address, _abi, signerOrProvider) as MonthlyPaymentsCalculator;
  }
}
