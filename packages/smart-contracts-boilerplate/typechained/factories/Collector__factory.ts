/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Collector, CollectorInterface } from '../Collector';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'distributorContract',
    outputs: [
      {
        internalType: 'contract DistributorInterface',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'homeId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'renterAddress',
        type: 'address',
      },
    ],
    name: 'getMonthlyPaymentAmount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isOwner',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'monthlyPaymentsCalculatorContract',
    outputs: [
      {
        internalType: 'contract MonthlyPaymentsCalculatorInterface',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'renterAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'payMonthlyPayments',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'paymentsMade',
    outputs: [
      {
        internalType: 'uint256',
        name: 'timeStamp',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'paymentsMissed',
    outputs: [
      {
        internalType: 'uint256',
        name: 'timeStamp',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'principalContract',
    outputs: [
      {
        internalType: 'contract PrincipalInterface',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'renterToHome',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'renterToMonthlyPayment',
    outputs: [
      {
        internalType: 'uint256',
        name: 'stabilityFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'principal',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'buffer',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'reservesContract',
    outputs: [
      {
        internalType: 'contract ReservesInterface',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_address',
        type: 'address',
      },
    ],
    name: 'setDistributorContractAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_address',
        type: 'address',
      },
    ],
    name: 'setMonthlyPaymentsCalculatorContractAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_address',
        type: 'address',
      },
    ],
    name: 'setPrincipalContractAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_address',
        type: 'address',
      },
    ],
    name: 'setReservesContractAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3610b1f806100696000396000f3fe6080604052600436106101095760003560e01c80638f32d59b11610095578063b92b1cd911610064578063b92b1cd9146102ae578063e13c6a70146102ce578063edd69b9a146102fb578063efe9dbab1461030e578063f2fde38b1461032357610109565b80638f32d59b14610228578063a5e923111461024a578063af8d2ecc1461025f578063b36afd0f1461028e57610109565b80633a68eaf6116100dc5780633a68eaf61461019b5780634fcfacb5146101b0578063520bfd46146101d0578063715018a6146101fe5780638da5cb5b1461021357610109565b80631c9c83a51461010e578063222b9e3f1461013057806324fab44d1461015b5780632f2ce5401461017b575b600080fd5b34801561011a57600080fd5b5061012e610129366004610923565b610343565b005b34801561013c57600080fd5b50610145610392565b60405161015291906109c5565b60405180910390f35b34801561016757600080fd5b5061012e610176366004610923565b6103a1565b34801561018757600080fd5b5061012e610196366004610923565b6103e7565b3480156101a757600080fd5b5061014561042d565b3480156101bc57600080fd5b5061012e6101cb366004610923565b61043c565b3480156101dc57600080fd5b506101f06101eb366004610944565b610482565b604051610152929190610aa1565b34801561020a57600080fd5b5061012e6104be565b34801561021f57600080fd5b506101456104ee565b34801561023457600080fd5b5061023d6104fd565b60405161015291906109d9565b34801561025657600080fd5b5061014561050e565b34801561026b57600080fd5b5061027f61027a366004610923565b61051d565b60405161015293929190610aaf565b34801561029a57600080fd5b506101f06102a9366004610944565b61053e565b3480156102ba57600080fd5b5061012e6102c936600461096d565b61055a565b3480156102da57600080fd5b506102ee6102e9366004610923565b610631565b6040516101529190610a81565b61012e610309366004610944565b610643565b34801561031a57600080fd5b50610145610852565b34801561032f57600080fd5b5061012e61033e366004610923565b610861565b61034b6104fd565b6103705760405162461bcd60e51b815260040161036790610a52565b60405180910390fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b031681565b6103a96104fd565b6103c55760405162461bcd60e51b815260040161036790610a52565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6103ef6104fd565b61040b5760405162461bcd60e51b815260040161036790610a52565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b031681565b6104446104fd565b6104605760405162461bcd60e51b815260040161036790610a52565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6007602052816000526040600020818154811061049e57600080fd5b600091825260209091206002909102018054600190910154909250905082565b6104c66104fd565b6104e25760405162461bcd60e51b815260040161036790610a52565b6104ec60006108b7565b565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b6001546001600160a01b031681565b60066020526000908152604090208054600182015460029092015490919083565b6008602052816000526040600020818154811061049e57600080fd5b600154604051630b06bea960e41b8152600091829182916001600160a01b03169063b06bea90906105919088908890600401610a8a565b606060405180830381600087803b1580156105ab57600080fd5b505af11580156105bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e39190610998565b6040805160608101825293845260208085019384528482019283526001600160a01b039098166000908152600690985290962091518255516001820155935160029094019390935550505050565b60056020526000908152604090205481565b6001600160a01b0382166000908152600660205260408120600281015460018201549154909161067291610ac5565b61067c9190610ac5565b90508082101561069e5760405162461bcd60e51b8152600401610367906109e4565b6002546001600160a01b03848116600090815260066020526040908190205490516322c1a7df60e11b815291909216916345834fbe916106e19190600401610a81565b600060405180830381600087803b1580156106fb57600080fd5b505af115801561070f573d6000803e3d6000fd5b50506003546001600160a01b0386811660009081526006602052604090819020600101549051636077205f60e01b8152919092169350636077205f92506107599190600401610a81565b600060405180830381600087803b15801561077357600080fd5b505af1158015610787573d6000803e3d6000fd5b5050600480546001600160a01b0387811660009081526006602052604090819020600201549051632291200960e21b8152919092169450638a44802493506107cf9201610a81565b600060405180830381600087803b1580156107e957600080fd5b505af11580156107fd573d6000803e3d6000fd5b505050506001600160a01b039290921660009081526007602090815260408083208151808301909252428252818301948552805460018082018355918552929093209051600290920201908155915191015550565b6003546001600160a01b031681565b6108696104fd565b6108855760405162461bcd60e51b815260040161036790610a52565b6001600160a01b0381166108ab5760405162461bcd60e51b815260040161036790610a1b565b6108b4816108b7565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461091e57600080fd5b919050565b600060208284031215610934578081fd5b61093d82610907565b9392505050565b60008060408385031215610956578081fd5b61095f83610907565b946020939093013593505050565b6000806040838503121561097f578182fd5b8235915061098f60208401610907565b90509250929050565b6000806000606084860312156109ac578081fd5b8351925060208401519150604084015190509250925092565b6001600160a01b0391909116815260200190565b901515815260200190565b60208082526017908201527f5061796d656e7420697320696e73756666696369656e74000000000000000000604082015260600190565b6020808252601d908201527f4e6577206f776e657220697320746865207a65726f2061646472657373000000604082015260600190565b6020808252601590820152744f6e6c79206f776e65722063616e2061636365737360581b604082015260600190565b90815260200190565b9182526001600160a01b0316602082015260400190565b918252602082015260400190565b9283526020830191909152604082015260600190565b60008219821115610ae457634e487b7160e01b81526011600452602481fd5b50019056fea2646970667358221220e91cea74749cf482b38efa14d981079d2428151ff3cf69c401d7f15bd2eff85b64736f6c63430008000033';

export class Collector__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<Collector> {
    return super.deploy(overrides || {}) as Promise<Collector>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Collector {
    return super.attach(address) as Collector;
  }
  connect(signer: Signer): Collector__factory {
    return super.connect(signer) as Collector__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CollectorInterface {
    return new utils.Interface(_abi) as CollectorInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Collector {
    return new Contract(address, _abi, signerOrProvider) as Collector;
  }
}
