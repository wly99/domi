/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Collector, CollectorInterface } from '../Collector';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'domiContract',
    outputs: [
      {
        internalType: 'contract DomiInterface',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'homeId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'renterAddress',
        type: 'address',
      },
    ],
    name: 'getMonthlyPaymentAmount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isOwner',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'monthlyPaymentsCalculatorContract',
    outputs: [
      {
        internalType: 'contract MonthlyPaymentsCalculatorInterface',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'renterAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'payMonthlyPayments',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'paymentsMade',
    outputs: [
      {
        internalType: 'uint256',
        name: 'timeStamp',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'paymentsMissed',
    outputs: [
      {
        internalType: 'uint256',
        name: 'timeStamp',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'principalContract',
    outputs: [
      {
        internalType: 'contract PrincipalInterface',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'renterToHome',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'renterToMonthlyPayment',
    outputs: [
      {
        internalType: 'uint256',
        name: 'savingsRate',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'principal',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'buffer',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'reservesContract',
    outputs: [
      {
        internalType: 'contract ReservesInterface',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_address',
        type: 'address',
      },
    ],
    name: 'setDomiContractAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_address',
        type: 'address',
      },
    ],
    name: 'setMonthlyPaymentsCalculatorContractAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_address',
        type: 'address',
      },
    ],
    name: 'setPrincipalContractAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_address',
        type: 'address',
      },
    ],
    name: 'setReservesContractAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3610b6b806100696000396000f3fe6080604052600436106101095760003560e01c8063af8d2ecc11610095578063e13c6a7011610064578063e13c6a70146102ae578063edd69b9a146102db578063efe9dbab146102ee578063f2fde38b14610303578063fa91ec0b1461032357610109565b8063af8d2ecc1461022a578063b36afd0f14610259578063b92b1cd914610279578063bda191611461029957610109565b8063520bfd46116100dc578063520bfd461461019b578063715018a6146101c95780638da5cb5b146101de5780638f32d59b146101f3578063a5e923111461021557610109565b80631c9c83a51461010e5780632f2ce540146101305780633a68eaf6146101505780634fcfacb51461017b575b600080fd5b34801561011a57600080fd5b5061012e610129366004610932565b610343565b005b34801561013c57600080fd5b5061012e61014b366004610932565b610392565b34801561015c57600080fd5b506101656103d8565b60405161017291906109d4565b60405180910390f35b34801561018757600080fd5b5061012e610196366004610932565b6103e7565b3480156101a757600080fd5b506101bb6101b6366004610953565b61042d565b604051610172929190610aed565b3480156101d557600080fd5b5061012e610469565b3480156101ea57600080fd5b50610165610499565b3480156101ff57600080fd5b506102086104a8565b6040516101729190610a25565b34801561022157600080fd5b506101656104b9565b34801561023657600080fd5b5061024a610245366004610932565b6104c8565b60405161017293929190610afb565b34801561026557600080fd5b506101bb610274366004610953565b6104e9565b34801561028557600080fd5b5061012e61029436600461097c565b610505565b3480156102a557600080fd5b506101656105dc565b3480156102ba57600080fd5b506102ce6102c9366004610932565b6105eb565b6040516101729190610acd565b61012e6102e9366004610953565b6105fd565b3480156102fa57600080fd5b5061016561081b565b34801561030f57600080fd5b5061012e61031e366004610932565b61082a565b34801561032f57600080fd5b5061012e61033e366004610932565b610880565b61034b6104a8565b6103705760405162461bcd60e51b815260040161036790610a9e565b60405180910390fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b61039a6104a8565b6103b65760405162461bcd60e51b815260040161036790610a9e565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b031681565b6103ef6104a8565b61040b5760405162461bcd60e51b815260040161036790610a9e565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6007602052816000526040600020818154811061044957600080fd5b600091825260209091206002909102018054600190910154909250905082565b6104716104a8565b61048d5760405162461bcd60e51b815260040161036790610a9e565b61049760006108c6565b565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b6001546001600160a01b031681565b60066020526000908152604090208054600182015460029092015490919083565b6008602052816000526040600020818154811061044957600080fd5b600154604051630b06bea960e41b8152600091829182916001600160a01b03169063b06bea909061053c9088908890600401610ad6565b606060405180830381600087803b15801561055657600080fd5b505af115801561056a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058e91906109a7565b6040805160608101825293845260208085019384528482019283526001600160a01b039098166000908152600690985290962091518255516001820155935160029094019390935550505050565b6002546001600160a01b031681565b60056020526000908152604090205481565b6001600160a01b0382166000908152600660205260408120600281015460018201549154909161062c91610b11565b6106369190610b11565b9050808210156106585760405162461bcd60e51b815260040161036790610a30565b6002546001600160a01b038481166000908152600660205260409081902054905163a64b6e5f60e01b8152919092169163a64b6e5f9161069f9187918591906004016109e8565b600060405180830381600087803b1580156106b957600080fd5b505af11580156106cd573d6000803e3d6000fd5b50506003546001600160a01b0386811660009081526006602052604090819020600101549051631c6e817b60e31b815291909216935063e3740bd89250610718918791600401610a0c565b600060405180830381600087803b15801561073257600080fd5b505af1158015610746573d6000803e3d6000fd5b505060028054600480546001600160a01b038981166000908152600660205260409081902090950154945163a64b6e5f60e01b8152938116965063a64b6e5f9550610798948a949190921692016109e8565b600060405180830381600087803b1580156107b257600080fd5b505af11580156107c6573d6000803e3d6000fd5b505050506001600160a01b039290921660009081526007602090815260408083208151808301909252428252818301948552805460018082018355918552929093209051600290920201908155915191015550565b6003546001600160a01b031681565b6108326104a8565b61084e5760405162461bcd60e51b815260040161036790610a9e565b6001600160a01b0381166108745760405162461bcd60e51b815260040161036790610a67565b61087d816108c6565b50565b6108886104a8565b6108a45760405162461bcd60e51b815260040161036790610a9e565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461092d57600080fd5b919050565b600060208284031215610943578081fd5b61094c82610916565b9392505050565b60008060408385031215610965578081fd5b61096e83610916565b946020939093013593505050565b6000806040838503121561098e578182fd5b8235915061099e60208401610916565b90509250929050565b6000806000606084860312156109bb578081fd5b8351925060208401519150604084015190509250925092565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60208082526017908201527f5061796d656e7420697320696e73756666696369656e74000000000000000000604082015260600190565b6020808252601d908201527f4e6577206f776e657220697320746865207a65726f2061646472657373000000604082015260600190565b6020808252601590820152744f6e6c79206f776e65722063616e2061636365737360581b604082015260600190565b90815260200190565b9182526001600160a01b0316602082015260400190565b918252602082015260400190565b9283526020830191909152604082015260600190565b60008219821115610b3057634e487b7160e01b81526011600452602481fd5b50019056fea2646970667358221220852510e0cea9949da15da2a5fd7f364a9356dceb7f6ea2c845d3f186aa271a9564736f6c63430008000033';

export class Collector__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<Collector> {
    return super.deploy(overrides || {}) as Promise<Collector>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Collector {
    return super.attach(address) as Collector;
  }
  connect(signer: Signer): Collector__factory {
    return super.connect(signer) as Collector__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CollectorInterface {
    return new utils.Interface(_abi) as CollectorInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Collector {
    return new Contract(address, _abi, signerOrProvider) as Collector;
  }
}
